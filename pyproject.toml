[project]
name = "feedbacker"
version = "0.1.0"
description = "feedbacker provides feedback so you don't have to"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["student", "grades", "feedback", "submission", "autograde"]

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
authors = [
  {name = "Sequoia Ploeg", email = "sequoiap4@gmail.com" },
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  {name = "Sequoia Ploeg", email = "sequoiap4@gmail.com"},
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Operating System :: OS Independent",
]

dependencies = [
    "fastapi == 0.114.0",
    "sqlalchemy[asyncio] == 2.0.34",
    "aiosqlite == 0.20.0",
    "sqlalchemy_utils == 0.41.2",
    "bcrypt == 4.2.0",
    "PyJWT == 2.9.0",
#   "scipy >= 1.5.4",
#   "numpy >= 1.19.5",
#   "sax >= 0.10.3",
#   "jax >= 0.4.18",
#   "pandas >= 2.0.0",
#   "lark ~= 1.1.5",
#   "tabulate ~= 0.9.0",
#   "deprecation ~= 2.1.0",
]

[project.optional-dependencies]
# cpu = ["jax[cpu]"]
# gdsfactory = ["gdsfactory"]
# sipann = ["SiPANN"]
dev = [
  "fastapi[standard]",
#   "pre-commit",
#   "matplotlib",
#   "bump2version~=1.0.0",
#   "flake8",
#   "pytest",
#   "coverage",
#   "build",
#   "pytest",
#   "tox",
]
# doc = [
#   "jupyter-book ~= 0.13.2",
#   "matplotlib >= 3.7.1",
#   # "numpydoc == 1.6.0",
#   "jsonschema <= 4.17.3",
#   "referencing <= 0.8.11",
# ]
# test = [
#   "pytest", 
#   "coverage",
# ]

# [project.urls]
# "Homepage" = "https://simphonyphotonics.readthedocs.io/en/stable/"
# "Documentation" = "https://simphonyphotonics.readthedocs.io/en/stable/"
# "Source" = "https://github.com/BYUCamachoLab/simphony"
# "Bug Reports" = "https://github.com/BYUCamachoLab/simphony/issues"
# "Research Group" = "https://camacholab.byu.edu/"

[tool.setuptools]
package-dir = {"" = "src"}
# include-package-data = true
# package-data = {"sample" = ["*.dat"]}

[tool.setuptools.packages.find]
include = ["feedbacker"]
namespaces = false

# [tool.setuptools.package-data]
# simphony = ["*.xml", "*.txt", "*.dat"]

# [tool.setuptools.packages.find]
# where = ["."]

[project.scripts]
feedbacker = "feedbacker.cli:entrypoint"

# [tool.pytest.ini_options]
# minversion = "6.0"
# testpaths = ["tests"]
# console_output_style = "progress"
# filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_third_party = ["starlette", "fastapi", "pydantic"]
known_first_party = ["feedbacker"]

[build-system]
requires = ["setuptools>=62.0.0", "wheel", "pip<=23.1.2"]
build-backend = "setuptools.build_meta"